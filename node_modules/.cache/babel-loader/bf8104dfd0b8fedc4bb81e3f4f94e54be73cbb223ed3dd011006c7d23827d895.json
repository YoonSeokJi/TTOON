{"ast":null,"code":"var _jsxFileName = \"/Users/jiyunseok/Desktop/ttoon2/src/components/GoogleLogin.jsx\";\nimport { ReactComponent as Google } from '../img/Google.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleLogin = ({\n  onLoginSuccess\n}) => {\n  const link = `https://ttoon.site/oauth2/authorization/google`;\n  const loginHandler = async () => {\n    try {\n      // Redirect the user to the login URL\n      window.location.href = link;\n\n      // Assuming you get the response after redirect, handle it\n      const response = await fetch('/your-endpoint-to-get-login-response');\n      const data = await response.json();\n\n      // Call the onLoginSuccess handler with the response data\n      onLoginSuccess(data);\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: loginHandler,\n    style: {\n      border: 'none',\n      padding: '0',\n      marginBottom: '3%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Google, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = GoogleLogin;\nexport default GoogleLogin;\nvar _c;\n$RefreshReg$(_c, \"GoogleLogin\");","map":{"version":3,"names":["ReactComponent","Google","jsxDEV","_jsxDEV","GoogleLogin","onLoginSuccess","link","loginHandler","window","location","href","response","fetch","data","json","error","console","type","onClick","style","border","padding","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jiyunseok/Desktop/ttoon2/src/components/GoogleLogin.jsx"],"sourcesContent":["import { ReactComponent as Google } from '../img/Google.svg';\n\nconst GoogleLogin = ({ onLoginSuccess }) => {\n  const link = `https://ttoon.site/oauth2/authorization/google`;\n\n  const loginHandler = async () => {\n    try {\n      // Redirect the user to the login URL\n      window.location.href = link;\n\n      // Assuming you get the response after redirect, handle it\n      const response = await fetch('/your-endpoint-to-get-login-response');\n      const data = await response.json();\n\n      // Call the onLoginSuccess handler with the response data\n      onLoginSuccess(data);\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n\n  return (\n    <button type='button' onClick={loginHandler} style={{ border: 'none', padding: '0', marginBottom: '3%' }}>\n      <Google />\n    </button>\n  );\n};\n\nexport default GoogleLogin;\n"],"mappings":";AAAA,SAASA,cAAc,IAAIC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAC1C,MAAMC,IAAI,GAAI,gDAA+C;EAE7D,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGJ,IAAI;;MAE3B;MACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;MACpE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;MAElC;MACAT,cAAc,CAACQ,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACEZ,OAAA;IAAQc,IAAI,EAAC,QAAQ;IAACC,OAAO,EAAEX,YAAa;IAACY,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,OAAO,EAAE,GAAG;MAAEC,YAAY,EAAE;IAAK,CAAE;IAAAC,QAAA,eACvGpB,OAAA,CAACF,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEb,CAAC;AAACC,EAAA,GAxBIxB,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}