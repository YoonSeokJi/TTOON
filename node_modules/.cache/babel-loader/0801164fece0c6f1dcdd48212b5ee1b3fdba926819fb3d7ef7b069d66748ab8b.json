{"ast":null,"code":"var _jsxFileName = \"/Users/jiyunseok/Desktop/ttoon2/src/components/NickNameInput.jsx\",\n  _s = $RefreshSig$();\n// NicknameInput.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // 서버 요청을 위해 axios를 사용합니다.\nimport '../styles/NickNameInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NicknameInput = () => {\n  _s();\n  const [nickname, setNickname] = useState('');\n  const [charCount, setCharCount] = useState(0);\n  const maxLength = 14; // 닉네임 글자 수 제한\n\n  useEffect(() => {\n    // 서버에서 닉네임을 가져오는 함수\n    const fetchNickname = async () => {\n      try {\n        const response = await axios.get('/api/getNickname'); // 서버의 실제 URL로 변경하세요.\n        setNickname(response.data.nickname);\n        setCharCount(response.data.nickname.length);\n      } catch (error) {\n        console.error('Error fetching nickname:', error);\n      }\n    };\n    fetchNickname();\n  }, []);\n  const handleChange = event => {\n    const input = event.target.value;\n    if (input.length <= maxLength) {\n      setNickname(input);\n      setCharCount(input.length);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nickname-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"nickname\",\n      children: \"\\uB2C9\\uB124\\uC784\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"nickname\",\n      type: \"text\",\n      value: nickname,\n      onChange: handleChange,\n      maxLength: maxLength,\n      className: \"nickname-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char-count\",\n      children: [charCount, \"/\", maxLength, \"\\uC790\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(NicknameInput, \"t7cPwYsb24Elh+2zl+Esztw1duE=\");\n_c = NicknameInput;\nexport default NicknameInput;\nvar _c;\n$RefreshReg$(_c, \"NicknameInput\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","NicknameInput","_s","nickname","setNickname","charCount","setCharCount","maxLength","fetchNickname","response","get","data","length","error","console","handleChange","event","input","target","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","_c","$RefreshReg$"],"sources":["/Users/jiyunseok/Desktop/ttoon2/src/components/NickNameInput.jsx"],"sourcesContent":["// NicknameInput.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // 서버 요청을 위해 axios를 사용합니다.\nimport '../styles/NickNameInput.css';\n\nconst NicknameInput = () => {\n  const [nickname, setNickname] = useState('');\n  const [charCount, setCharCount] = useState(0);\n  const maxLength = 14; // 닉네임 글자 수 제한\n\n  useEffect(() => {\n    // 서버에서 닉네임을 가져오는 함수\n    const fetchNickname = async () => {\n      try {\n        const response = await axios.get('/api/getNickname'); // 서버의 실제 URL로 변경하세요.\n        setNickname(response.data.nickname);\n        setCharCount(response.data.nickname.length);\n      } catch (error) {\n        console.error('Error fetching nickname:', error);\n      }\n    };\n\n    fetchNickname();\n  }, []);\n\n  const handleChange = (event) => {\n    const input = event.target.value;\n    if (input.length <= maxLength) {\n      setNickname(input);\n      setCharCount(input.length);\n    }\n  };\n\n  return (\n    <div className=\"nickname-container\">\n      <label htmlFor=\"nickname\">닉네임</label>\n      <input\n        id=\"nickname\"\n        type=\"text\"\n        value={nickname}\n        onChange={handleChange}\n        maxLength={maxLength}\n        className=\"nickname-input\"\n      />\n      <div className=\"char-count\">\n        {charCount}/{maxLength}자\n      </div>\n    </div>\n  );\n};\n\nexport default NicknameInput;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAMW,SAAS,GAAG,EAAE,CAAC,CAAC;;EAEtBV,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;QACtDN,WAAW,CAACK,QAAQ,CAACE,IAAI,CAACR,QAAQ,CAAC;QACnCG,YAAY,CAACG,QAAQ,CAACE,IAAI,CAACR,QAAQ,CAACS,MAAM,CAAC;MAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDL,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAChC,IAAIF,KAAK,CAACL,MAAM,IAAIL,SAAS,EAAE;MAC7BH,WAAW,CAACa,KAAK,CAAC;MAClBX,YAAY,CAACW,KAAK,CAACL,MAAM,CAAC;IAC5B;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKoB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCrB,OAAA;MAAOsB,OAAO,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACrC1B,OAAA;MACE2B,EAAE,EAAC,UAAU;MACbC,IAAI,EAAC,MAAM;MACXT,KAAK,EAAEhB,QAAS;MAChB0B,QAAQ,EAAEd,YAAa;MACvBR,SAAS,EAAEA,SAAU;MACrBa,SAAS,EAAC;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACF1B,OAAA;MAAKoB,SAAS,EAAC,YAAY;MAAAC,QAAA,GACxBhB,SAAS,EAAC,GAAC,EAACE,SAAS,EAAC,QACzB;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CA5CID,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AA8CnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}