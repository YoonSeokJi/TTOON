{"ast":null,"code":"var _jsxFileName = \"/Users/jiyunseok/Desktop/ttoon2/src/components/NickNameInput.jsx\",\n  _s = $RefreshSig$();\n// NickNameInput.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NicknameInput = ({\n  initialNickname\n}) => {\n  _s();\n  const [nickname, setNickname] = useState(initialNickname);\n  const [charCount, setCharCount] = useState(initialNickname.length);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsLoggedIn(true);\n      fetchNickname(token);\n    } else {\n      console.log(\"로그인 토큰이 없습니다. 로그인이 필요합니다.\");\n      // 필요에 따라 로그인 페이지로 이동하거나 다른 처리를 수행합니다.\n    }\n  }, []);\n  const fetchNickname = async token => {\n    try {\n      const response = await axios.get('https://ttoon.site/api/profile', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data.isSuccess) {\n        setNickname(response.data.data.nickName);\n        setCharCount(response.data.data.nickName.length);\n      } else {\n        console.error('Error fetching nickname:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Error fetching nickname:', error);\n    }\n  };\n  const handleInputChange = e => {\n    setNickname(e.target.value);\n    setCharCount(e.target.value.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"InputField\",\n        value: nickname,\n        onChange: handleInputChange,\n        maxLength: 14\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [charCount, \"/14\\uC790\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(NicknameInput, \"83Ja5AhZSaGaGOimYhlV0RKKwA8=\");\n_c = NicknameInput;\nexport default NicknameInput;\nvar _c;\n$RefreshReg$(_c, \"NicknameInput\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","NicknameInput","initialNickname","_s","nickname","setNickname","charCount","setCharCount","length","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","fetchNickname","console","log","response","get","headers","Authorization","data","isSuccess","nickName","error","message","handleInputChange","e","target","value","children","type","className","onChange","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jiyunseok/Desktop/ttoon2/src/components/NickNameInput.jsx"],"sourcesContent":["// NickNameInput.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst NicknameInput = ({ initialNickname }) => {\n  const [nickname, setNickname] = useState(initialNickname);\n  const [charCount, setCharCount] = useState(initialNickname.length);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsLoggedIn(true);\n      fetchNickname(token);\n    } else {\n      console.log(\"로그인 토큰이 없습니다. 로그인이 필요합니다.\");\n      // 필요에 따라 로그인 페이지로 이동하거나 다른 처리를 수행합니다.\n    }\n  }, []);\n\n  const fetchNickname = async (token) => {\n    try {\n      const response = await axios.get('https://ttoon.site/api/profile', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data.isSuccess) {\n        setNickname(response.data.data.nickName);\n        setCharCount(response.data.data.nickName.length);\n      } else {\n        console.error('Error fetching nickname:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Error fetching nickname:', error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setNickname(e.target.value);\n    setCharCount(e.target.value.length);\n  };\n\n  return (\n    <div>\n      {isLoggedIn ? (\n        <>\n          <input\n            type=\"text\"\n            className=\"InputField\"\n            value={nickname}\n            onChange={handleInputChange}\n            maxLength={14}\n          />\n          <div>{charCount}/14자</div>\n        </>\n      ) : (\n        <div>로그인이 필요합니다.</div>\n      )}\n    </div>\n  );\n};\n\nexport default NicknameInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}